<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software Development on Jonathan Ruffles</title><link>https://hugo-profile.netlify.app/categories/software-development/</link><description>Recent content in Software Development on Jonathan Ruffles</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 04 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://hugo-profile.netlify.app/categories/software-development/index.xml" rel="self" type="application/rss+xml"/><item><title>Benchmarking .NET CSV Parsers</title><link>https://hugo-profile.netlify.app/posts/benchmarking-csv-parsers/</link><pubDate>Wed, 04 Oct 2023 00:00:00 +0000</pubDate><guid>https://hugo-profile.netlify.app/posts/benchmarking-csv-parsers/</guid><description>Introduction As part of my new job, I am around csv files quite a lot. One of the tasks internally was to design and create a package which read common csv files for the company, as a NuGet package, so it could be used across internal company tools.
Now, instead of writing an entire CSV parser, I decided to use an existing package, with a small intermediary layer which implemented business-specific details, such as models, and simpler interface.</description></item></channel></rss>